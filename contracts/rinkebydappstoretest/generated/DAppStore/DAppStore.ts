// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewApp extends ethereum.Event {
  get params(): NewApp__Params {
    return new NewApp__Params(this);
  }
}

export class NewApp__Params {
  _event: NewApp;

  constructor(event: NewApp) {
    this._event = event;
  }

  get appID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get appOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get appName(): string {
    return this._event.parameters[2].value.toString();
  }

  get appIPFSHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get appAddData(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class UpdateApp extends ethereum.Event {
  get params(): UpdateApp__Params {
    return new UpdateApp__Params(this);
  }
}

export class UpdateApp__Params {
  _event: UpdateApp;

  constructor(event: UpdateApp) {
    this._event = event;
  }

  get appID(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get appOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get appName(): string {
    return this._event.parameters[2].value.toString();
  }

  get appIPFSHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get appAddData(): string {
    return this._event.parameters[4].value.toString();
  }
}

export class DAppStore__getDAppDataResultValue0Struct extends ethereum.Tuple {
  get appID(): BigInt {
    return this[0].toBigInt();
  }

  get appOwner(): Address {
    return this[1].toAddress();
  }

  get appName(): string {
    return this[2].toString();
  }

  get appIPFSHash(): string {
    return this[3].toString();
  }

  get appAddData(): string {
    return this[4].toString();
  }
}

export class DAppStore extends ethereum.SmartContract {
  static bind(address: Address): DAppStore {
    return new DAppStore("DAppStore", address);
  }

  amountToPay(): BigInt {
    let result = super.call("amountToPay", "amountToPay():(uint256)", []);

    return result[0].toBigInt();
  }

  try_amountToPay(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("amountToPay", "amountToPay():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  appID(): BigInt {
    let result = super.call("appID", "appID():(uint256)", []);

    return result[0].toBigInt();
  }

  try_appID(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("appID", "appID():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getDAppData(_appID: BigInt): DAppStore__getDAppDataResultValue0Struct {
    let result = super.call(
      "getDAppData",
      "getDAppData(uint256):((uint256,address,string,string,string))",
      [ethereum.Value.fromUnsignedBigInt(_appID)]
    );

    return changetype<DAppStore__getDAppDataResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getDAppData(
    _appID: BigInt
  ): ethereum.CallResult<DAppStore__getDAppDataResultValue0Struct> {
    let result = super.tryCall(
      "getDAppData",
      "getDAppData(uint256):((uint256,address,string,string,string))",
      [ethereum.Value.fromUnsignedBigInt(_appID)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DAppStore__getDAppDataResultValue0Struct>(value[0].toTuple())
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _amountToPay(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class ReleaseDAppCall extends ethereum.Call {
  get inputs(): ReleaseDAppCall__Inputs {
    return new ReleaseDAppCall__Inputs(this);
  }

  get outputs(): ReleaseDAppCall__Outputs {
    return new ReleaseDAppCall__Outputs(this);
  }
}

export class ReleaseDAppCall__Inputs {
  _call: ReleaseDAppCall;

  constructor(call: ReleaseDAppCall) {
    this._call = call;
  }

  get _appID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ReleaseDAppCall__Outputs {
  _call: ReleaseDAppCall;

  constructor(call: ReleaseDAppCall) {
    this._call = call;
  }
}

export class SubmitDAppCall extends ethereum.Call {
  get inputs(): SubmitDAppCall__Inputs {
    return new SubmitDAppCall__Inputs(this);
  }

  get outputs(): SubmitDAppCall__Outputs {
    return new SubmitDAppCall__Outputs(this);
  }
}

export class SubmitDAppCall__Inputs {
  _call: SubmitDAppCall;

  constructor(call: SubmitDAppCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _additionalData(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class SubmitDAppCall__Outputs {
  _call: SubmitDAppCall;

  constructor(call: SubmitDAppCall) {
    this._call = call;
  }
}

export class UpdateDAppCall extends ethereum.Call {
  get inputs(): UpdateDAppCall__Inputs {
    return new UpdateDAppCall__Inputs(this);
  }

  get outputs(): UpdateDAppCall__Outputs {
    return new UpdateDAppCall__Outputs(this);
  }
}

export class UpdateDAppCall__Inputs {
  _call: UpdateDAppCall;

  constructor(call: UpdateDAppCall) {
    this._call = call;
  }

  get _appID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _ipfsHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _additionalData(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UpdateDAppCall__Outputs {
  _call: UpdateDAppCall;

  constructor(call: UpdateDAppCall) {
    this._call = call;
  }
}
